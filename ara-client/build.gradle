plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
}
ext.ktor_version = '1.3.2'
repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}
dependencies {
}
group 'com.andromeda.ara.client'
version '0.0.1'

apply plugin: 'maven-publish'

kotlin {
    //For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64
    //linuxX64("linux")
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0") // JVM dependency
                implementation("io.ktor:ktor-client-core:$ktor_version")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')

            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation("org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0") // JVM dependency
                implementation("io.ktor:ktor-client-core-jvm:$ktor_version")
                implementation "io.ktor:ktor-client-cio:$ktor_version"
                implementation("io.ktor:ktor-client-serialization:$ktor_version")
        }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        linuxMain {
        }
        linuxTest {
        }

    }
    jvm()

}
